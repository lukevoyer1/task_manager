/* Material Youâ€“Inspired Theme with Softer Contrasts and Shadows */

:root {
  /* Day Mode Settings */
  --primary-color: #2196f3;
  /* Material Blue */
  --primary-hover-color: #1976d2;
  /* Darker Material Blue for hover */
  --secondary-color: #625b71;
  --background-color: #f5f5f5;
  /* Offset light gray background */
  --surface-color: #ffffff;
  --on-primary-color: #ffffff;
  --on-secondary-color: #ffffff;
  --on-background-color: #1c1b1f;
  --on-surface-color: #1c1b1f;
  --error-color: #ba1a1a;
  --success-color: #4caf50;
  --border-radius: 16px;
  --shadow: 0 4px 8px rgba(0, 0, 0, 0.12);
  --table-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
  --even-row-color: #f2e7fe;
  --odd-row-color: #ffffff;
}

body.night-mode {
  /* Dark Mode Variables */
  --primary-color: #383838;
  /* Dark mode primary */
  --primary-hover-color: #2196f3;
  --secondary-color: #988b82;
  --background-color: #242424;
  /* Offset dark gray background */
  --surface-color: #1c1b1f;
  --on-primary-color: #ffffff;
  --on-secondary-color: #ffffff;
  --on-background-color: #e6e1e5;
  --on-surface-color: #e6e1e5;
  --even-row-color: #343034;
  --odd-row-color: #1c1b1f;
}

/* Global Reset & Layout */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Roboto", sans-serif;
  background-color: var(--background-color);
  color: var(--on-background-color);
  padding: 20px;
  transition: background-color 0.5s, color 0.5s;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

.container {
  width: 100%;
  max-width: 800px;
  background-color: var(--surface-color);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  padding: 24px;
}

/* Headings */

h1,
h2 {
  color: var(--primary-color);
  margin-bottom: 16px;
  text-align: center;
}

/* Force <h1> title to white in dark mode */

body.night-mode h1 {
  color: #ffffff;
}

/* Force <h2> headers (Tasks and Completed Tasks) to white in dark mode */

body.night-mode h2 {
  color: #ffffff;
}

/* Form Styles */

.form {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-bottom: 20px;
}

.form input,
.form textarea {
  padding: 12px;
  border: 1px solid var(--secondary-color);
  border-radius: var(--border-radius);
  font-size: 16px;
  background-color: var(--surface-color);
  color: var(--on-surface-color);
  width: 100%;
  /* Ensure inputs take full width */
  max-width: 100%;
  /* Ensure inputs don't exceed their container */
}

/* Custom date input container */
.date-input-container {
  width: 100%;
  position: relative;
}

/* Custom date input styling */
.date-input {
  width: 100%;
  padding: 12px;
  border: 1px solid var(--secondary-color);
  border-radius: var(--border-radius);
  font-size: 16px;
  background-color: var(--surface-color);
  color: var(--on-surface-color);
}

/* Ensure Flatpickr calendar is styled properly */
.flatpickr-calendar {
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
}

/* Dark mode styling for Flatpickr */
body.night-mode .flatpickr-calendar {
  background-color: var(--surface-color);
  color: var(--on-surface-color);
  border-color: var(--secondary-color);
}

/* Make month and year text white in dark mode */
body.night-mode .flatpickr-month,
body.night-mode .flatpickr-current-month,
body.night-mode .flatpickr-monthDropdown-months,
body.night-mode .flatpickr-monthDropdown-month,
body.night-mode .numInputWrapper span.arrowUp,
body.night-mode .numInputWrapper span.arrowDown,
body.night-mode .flatpickr-current-month .numInputWrapper span.arrowUp:after,
body.night-mode .flatpickr-current-month .numInputWrapper span.arrowDown:after,
body.night-mode .flatpickr-current-month .flatpickr-monthDropdown-months,
body.night-mode .flatpickr-current-month input.cur-year {
  color: #ffffff !important;
  fill: #ffffff !important;
}

/* Make days of week white in dark mode */
body.night-mode span.flatpickr-weekday {
  color: #ffffff !important;
}

/* Make navigation arrows white in dark mode */
body.night-mode .flatpickr-months .flatpickr-prev-month svg,
body.night-mode .flatpickr-months .flatpickr-next-month svg {
  fill: #ffffff !important;
}

body.night-mode .flatpickr-months .flatpickr-prev-month:hover svg,
body.night-mode .flatpickr-months .flatpickr-next-month:hover svg {
  fill: var(--primary-hover-color) !important;
}

/* Style the days in dark mode */
body.night-mode .flatpickr-day {
  color: #e6e1e5;
  border-color: transparent;
}

body.night-mode .flatpickr-day.selected,
body.night-mode .flatpickr-day.startRange,
body.night-mode .flatpickr-day.endRange,
body.night-mode .flatpickr-day.selected.inRange,
body.night-mode .flatpickr-day.startRange.inRange,
body.night-mode .flatpickr-day.endRange.inRange {
  background-color: var(--primary-color);
  color: var(--on-primary-color);
  border-color: var(--primary-color);
}

body.night-mode .flatpickr-day:hover {
  background-color: var(--secondary-color);
  color: var(--on-secondary-color);
  border-color: var(--secondary-color);
}

body.night-mode .flatpickr-day.flatpickr-disabled,
body.night-mode .flatpickr-day.flatpickr-disabled:hover,
body.night-mode .flatpickr-day.prevMonthDay,
body.night-mode .flatpickr-day.nextMonthDay,
body.night-mode .flatpickr-day.notAllowed {
  color: rgba(230, 225, 229, 0.3);
}

.form button {
  padding: 12px;
  background-color: var(--primary-color);
  color: var(--on-primary-color);
  border: none;
  border-radius: var(--border-radius);
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s;
  /* Add drop shadow under the Add Task button */
  box-shadow: var(--shadow);
}

.form button:hover {
  background-color: var(--primary-hover-color);
}

/* Search Bar */

.search-bar {
  width: 100%;
  padding: 12px;
  border: 1px solid var(--secondary-color);
  border-radius: var(--border-radius);
  font-size: 16px;
  background-color: var(--surface-color);
  color: var(--on-surface-color);
  margin-bottom: 20px;
  box-shadow: var(--shadow);
}

/* Table Container */

.table-container {
  overflow-x: auto;
  margin-bottom: 16px;
  border-radius: var(--border-radius);
  box-shadow: var(--table-shadow);
}

/* Table Styles */

table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  background-color: var(--surface-color);
  table-layout: auto;
  /* Allow cells to adjust dynamically to content */
  transition: background-color 0.4s ease, color 0.4s ease;
}

thead th {
  padding: 16px;
  background-color: var(--primary-color);
  color: var(--on-primary-color);
  text-align: center;
  font-weight: 500;
  transition: background-color 0.4s ease, color 0.4s ease;
}

/* Make sortable headers look clickable */
th.sortable {
  cursor: pointer;
  position: relative;
  user-select: none;
}

th.sortable:hover {
  background-color: var(--primary-hover-color);
}

thead th:nth-child(4) {
  min-width: 120px;
  /* Widen the Status column */
}

tbody td {
  padding: 16px;
  border-bottom: 1px solid #e0e0e0;
  color: var(--on-surface-color);
  text-align: center;
  transition: background-color 0.4s ease, color 0.4s ease;
}

tbody tr {
  transition: background-color 0.4s ease, color 0.4s ease;
}

tbody tr.even-row {
  background-color: var(--even-row-color);
}

tbody tr.odd-row {
  background-color: var(--odd-row-color);
}

/* Hover effect: in day mode use Material Blue, in dark mode use the secondary color */

body:not(.night-mode) tbody tr:hover {
  background-color: #2196f3;
  /* Material Blue hover in day mode */
  color: var(--on-primary-color);
}

tbody tr:hover {
  /* For dark mode, this rule remains (when body.night-mode is active) */
  background-color: var(--secondary-color);
  color: var(--on-secondary-color);
}

/* Center status cell content */

.status-cell {
  text-align: center;
  vertical-align: middle;
}

/* Sort Icon */

.sort-icon {
  margin-left: 4px;
  font-size: 14px;
  color: var(--on-primary-color);
  transition: color 0.4s ease;
  display: inline-block;
  width: 14px;
  text-align: center;
}

.sort-icon.active-sort {
  font-weight: bold;
}

/* Action Buttons */

button.complete,
button.delete {
  padding: 8px 12px;
  border: none;
  border-radius: var(--border-radius);
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.3s;
  margin-right: 4px;
}

button.complete {
  background-color: var(--success-color);
  color: var(--on-primary-color);
}

button.complete:hover {
  background-color: #43a047;
}

button.delete {
  background-color: var(--error-color);
  color: var(--on-primary-color);
}

button.delete:hover {
  background-color: #a91818;
}

/* Pagination */

.pagination {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin-top: 12px;
}

.pagination button {
  padding: 8px 12px;
  border: 1px solid var(--primary-color);
  background-color: var(--surface-color);
  color: var(--primary-color);
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

.pagination button:hover {
  background-color: var(--primary-color);
  color: var(--on-primary-color);
}

/* Night Mode Toggle */

.night-mode-toggle {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background-color: var(--primary-color);
  color: var(--on-primary-color);
  border: none;
  border-radius: 50%;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: var(--shadow);
  transition: background-color 0.3s, transform 0.3s;
}

/* Hover effect for the night mode toggle button */

.night-mode-toggle:hover {
  background-color: var(--primary-hover-color);
  /* use --primary-hover-color here so we can control the dark mode as well */
}

body:not(.night-mode) .night-mode-toggle:hover {
  background-color: #383838;
  transform: scale(1.1);
}

/* Dark Mode Specific Overrides */

body.night-mode thead th {
  background-color: var(--primary-color);
  color: var(--on-primary-color);
}

body.night-mode .sort-icon {
  color: var(--on-primary-color);
}

body.night-mode button.complete,
body.night-mode button.delete {
  color: var(--on-primary-color);
}

/* No results message */
.no-results td {
  text-align: center;
  padding: 20px;
  color: var(--on-surface-color);
}

/* Responsive Table Styles */

@media (max-width: 768px) {
  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
  }

  thead {
    display: table-header-group; /* Keep thead as a header group */
  }

  thead tr,
  tbody tr,
  thead th,
  tbody td {
    display: block; /* Make rows and cells block-level elements */
    padding: 0.5em;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }

  thead th {
    border-bottom: 2px solid #ddd;
  }

  /* Add label to each cell showing the column header */
  tbody td::before {
    content: attr(data-label);
    font-weight: bold;
    display: block;
  }

  /* Last cell doesn't need a border */
  tbody tr:last-child td {
    border-bottom: none;
  }
}
